Exercice 4.
===========

1) premierprogramme.c : 24 lignes
   premierprogramme.i : 703 lignes (fichier traité par le préprocesseur)
2) C:/TDM-GCC-64/x86_64-w64-mingw32/include/stdio.h" 1 3  препроцессированные файлы http://www.viva64.com/ru/t/0076/
3) Les commentaires sont supprimés.
4) variable_de_classe_externe = 2 ;

http://tigcc.ticalc.org/doc/comopts.html

Exercice 6.
===========
1) .rodata : Segment de données en lecture seule
   .data : Segment de données
   .text : Segment de code
   .bss : Segment de stockage de données
2) .globl	main
   .globl	.refptr.je_ne_suis_pas_defini

Exercice 7.
===========

Cette directive indique le début d'un segment du code. Celui-ci est défini lors de l’assemblage et contient le code à exécuter. 
( Le code assembleur doit être transformé en code octal afin d’être exécuté par le microprocesseur.)

Exercice 8;9
============

***************
Codage de César
***************

Exercice 15
===========

Si vous retournez une valeur supérieure à 255(seuls les moins significatifs 8 bits sont utilisés) 256 devient 0.

Exercice 16.
============

1)Function int getchar (void) obtient un caractère (un caractère non signé) de stdin
2)Function int putchar (int char) écrit un caractère spécifié par l'argument char à stdout.
3)
